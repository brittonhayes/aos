version: "3.7"


networks:
  default:
    name: warhammer
    driver: bridge

services:
  warhammer:
    container_name: warhammer 
    build:
      dockerfile: ./Dockerfile
      context: .
    environment:
      - WARHAMMER_SERVICE_NAME
      - WARHAMMER_SERVICE_PORT
      - OTEL_EXPORTER_OTLP_ENDPOINT
      - OTEL_EXPORTER_OTLP_METRICS_TEMPORALITY_PREFERENCE
      - OTEL_RESOURCE_ATTRIBUTES
    ports:
      - "8080:8080"
    command: ["--migrate"]
    depends_on:
      otel_collector:
        condition: service_started

  otel_collector:
    image: otel/opentelemetry-collector-contrib:0.76.1
    container_name: otel_collector
    deploy:
      resources:
        limits:
          memory: 125M
    restart: unless-stopped 
    command: [ "--config=/etc/otel-config.yaml", "--config=/etc/otel-observability.yaml" ]
    volumes:
        - ./config/otel-config.yaml:/etc/otel-config.yaml
        - ./config/otel-observability.yaml:/etc/otel-observability.yaml
    ports:
      - "4317"          # OTLP over gRPC receiver
      - "4318:4318"     # OTLP over HTTP receiver
      - "9464"          # Prometheus exporter
      - "8888"          # metrics endpoint
    depends_on:
      - jaeger

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    restart: unless-stopped
    command:
      - "--memory.max-traces"
      - "10000"
      - "--query.base-path"
      - "/jaeger/ui"
      - "--prometheus.server-url"
      - "http://${PROMETHEUS_ADDR}" 
    deploy:
      resources:
        limits:
          memory: 300M
    ports:
      - "${JAEGER_SERVICE_PORT}:${JAEGER_SERVICE_PORT}"
      - "4317:4317"
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - METRICS_STORAGE_TYPE=prometheus

  prometheus:
    image: quay.io/prometheus/prometheus:v2.43.0
    container_name: prometheus
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus-config.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
    volumes:
      - ./config/prometheus-config.yaml:/etc/prometheus/prometheus-config.yaml
    deploy:
      resources:
        limits:
          memory: 300M
    ports:
      - "${PROMETHEUS_SERVICE_PORT}:${PROMETHEUS_SERVICE_PORT}"