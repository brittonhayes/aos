openapi: "3.1.0"
info:
  title: AoS API (Unofficial)
  version: 1.0.0
  description: API specification for an AoS REST API (Unofficial)
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
security: []
servers:
- url: http://aos-api.localhost
  description: Local server
- url: https://aos-api.com
  description: Production server
paths:
  /healthz:
    get:
      summary: Get health status
      description: Get health status
      operationId: getHealthz
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Health'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /allegiances:
    get:
      summary: Get all allegiances
      description: Get all allegiances
      operationId: getAllegiances
      parameters:
      - name: name
        in: query
        description: name of allegiance to filter by
        required: false
        schema:
          type: string
      - name: grand_alliance
        in: query
        description: id of grand alliance to filter by
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Allegiance'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /allegiances/{id}:
    get:
      summary: Get allegiance by id
      description: Get allegiance by id
      operationId: getAllegianceById
      parameters:
      - name: id
        in: path
        description: id of allegiance to return
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Allegiance'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /armies:
    get:
      summary: Get all armies
      description: Get all armies
      operationId: getArmies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Army'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /armies/{id}:
    get:
      summary: Get army by id
      description: Get army by id
      operationId: getArmyById
      parameters:
      - name: id
        in: path
        description: id of army to return
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Army'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /cities:
    get:
      summary: Get all cities
      description: Get all cities
      operationId: getCities
      parameters:
      - name: name
        in: query
        description: name of city to filter by
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/City'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /cities/{id}:
    get:
      summary: Get city by id
      description: Get city by id
      operationId: getCityById
      parameters:
      - name: id
        in: path
        description: id of city to return
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/City'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /docs:
    get:
      summary: Get API documentation
      description: Get API documentation
      operationId: getDocs
      responses:
        '200':
          description: OK
          content:
            text/html:
              schema:
                type: string
                format: binary
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /grand-alliances:
    get:
      summary: Get all grand alliances
      description: Get all grand alliances
      operationId: getGrandAlliances
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GrandAlliance'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /grand-alliances/{id}:
    get:
      summary: Get grand alliance by id
      description: Get grand alliance by id
      operationId: getGrandAllianceById
      parameters:
      - name: id
        in: path
        description: id of grand alliance to return
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrandAlliance'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /grand-strategies:
    get:
      summary: Get all grand strategies
      description: Get all grand strategies
      operationId: getGrandStrategies
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GrandStrategy'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /grand-strategies/{id}:
    get:
      summary: Get grand strategy by id
      description: Get grand strategy by id
      operationId: getGrandStrategyById
      parameters:
      - name: id
        in: path
        description: id of grand strategy to return
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GrandStrategy'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /units:
    get:
      summary: Get all units
      description: Get all units
      operationId: getUnits
      parameters:
      - name: name
        in: query
        description: name of unit to filter by
        required: false
        schema:
          type: string
      - name: grand_alliance
        in: query
        description: grand alliance of unit to filter by
        required: false
        schema:
          type: string
      - name: grand_strategy
        in: query
        description: grand strategy of unit to filter by
        required: false
        schema:
          type: string
      - name: points
        in: query
        description: points of unit to filter by
        required: false
        schema:
          type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Unit'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /units/{id}:
    get:
      summary: Get unit by id
      description: Get unit by id
      operationId: getUnitById
      parameters:
      - name: id
        in: path
        description: id of unit to return
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Unit'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /units/{id}/weapons:
    get:
      summary: Get weapons for unit by id
      description: Get weapons for unit by id
      operationId: getWeaponsForUnitById
      parameters:
      - name: id
        in: path
        description: id of unit to return weapons for
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WeaponsGroup"
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
  /units/{id}/abilities:
    get:
      summary: Get abilities for unit by id
      description: Get abilities for unit by id
      operationId: getAbilitiesForUnitById
      parameters:
      - name: id
        in: path
        description: id of unit to return abilities for
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Ability'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /warscrolls:
    get:
      summary: Get all warscrolls
      description: Get all warscrolls
      operationId: getWarscrolls
      parameters:
      - name: name
        in: query
        description: name of warscroll to filter by
        required: false
        schema:
          type: string
      - name: points
        in: query
        description: points of warscroll to filter by
        required: false
        schema:
          type: integer
      - name: battlefield_role
        in: query
        description: battlefield_role of warscroll to filter by
        required: false
        schema:
          type: string
      - name: size
        in: query
        description: size of warscroll to filter by
        required: false
        schema:
          type: string
      - name: notes
        in: query
        description: notes of warscroll to filter by
        required: false
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Warscroll'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /warscrolls/{id}:
    get:
      summary: Get warscroll by id
      description: Get warscroll by id
      operationId: getWarscrollById
      parameters:
      - name: id
        in: path
        description: id of warscroll to return
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Warscroll'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Health:
      required:
      - status
      type: object
      properties:
        status:
          type: string
    Error:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
      example:
        code: 404
        message: Not Found
    Warscroll:
      type: object
      properties:
        _id:
          type: string
          x-go-extra-tags:
            bun: ',pk'
        name:
          type: string
        allegiance_id:
          type: string
        allegiance:
          $ref: '#/components/schemas/Allegiance'
          x-go-extra-tags:
            bun: 'rel:belongs-to,join:allegiance_id=id'
        grand_alliance_id:
          type: string
        grand_alliance:
          $ref: '#/components/schemas/GrandAlliance'
          x-go-extra-tags:
            bun: 'rel:belongs-to,join:grand_alliance_id=id'
        size:
          type: integer
          format: int64
        points:
          type: integer
          format: int64
        battlefield_role:
          type: string
        notes:
          type: string
    City:
      type: object
      properties:
        _id:
          type: string
          x-go-extra-tags:
            bun: 'id,pk'
        name:
          type: string
        description:
          type: string
    DamageTable:
      type: object
      properties:
        _id:
          type: string
          x-go-extra-tags:
            bun: 'id,pk'
        wound_track_position:
          type: integer
          format: int64
        move:
          type: string 
        min_wounds_suffered:
          type: integer
          format: int64
    Ability:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
    Weapon:
      type: object
      properties:
        _id:
          type: string
          x-go-extra-tags:
            bun: ',pk'
        name:
          type: string
          example: "Lance and Sword"
        range:
          type: string
        attacks:
          type: string
        to_hit:
          type: string
        to_wound:
          type: string
        rend:
          type: string
        damage:
          type: string
    WeaponsGroup:
      type: object
      properties:
        melee_weapons:
          type: array
          items:
            $ref: '#/components/schemas/Weapon'
        missile_weapons:
          type: array
          items:
            $ref: '#/components/schemas/Weapon'
    GrandAlliance:
      type: object
      required:
      - name
      properties:
        _id:
          type: string
          x-go-extra-tags:
            bun: ',pk'
        name:
          type: string
        description:
          type: string
    GrandStrategy:
      type: object
      required:
      - name
      properties:
        _id:
          type: string
          x-go-extra-tags:
            bun: ',pk'
        name:
          type: string
        description:
          type: string
    Allegiance:
      type: object
      required:
      - name
      properties:
        _id:
          type: string
          x-go-extra-tags:
            bun: 'id,pk'
        name:
          type: string
        description:
          type: string
        grand_alliance:
          type: string
        mortal_realm:
          type: string
    Unit:
      type: object
      required:
      - name
      properties:
        _id:
          type: string
          x-go-extra-tags:
            bun: 'id,pk'
        name:
          type: string
        grand_alliance:
          type: string
        champion:
          type: string
        size:
          type: string
        move:
          type: string
        description:
          type: string
        save:
          type: integer
          format: int64
        bravery:
          type: integer
          format: int64
        models:
          type: integer
          format: int64
        points:
          type: integer
          format: int64
        wounds:
          type: integer
          format: int64
        abilities:
          type: array
          items:
            $ref: '#/components/schemas/Ability'
        keywords:
          type: array
          items:
            type: string
        command_abilities:
          type: array
          items:
            $ref: '#/components/schemas/Ability'
        magic:
          type: array
          items:
            $ref: '#/components/schemas/Ability'
        damage_table:
          type: array
          items:
            $ref: '#/components/schemas/DamageTable'
        missile_weapons:
          type: array
          items:
            $ref: '#/components/schemas/Weapon'
        melee_weapons:
          type: array
          items:
            $ref: '#/components/schemas/Weapon'
    Army:
      type: object
      required:
      - name
      properties:
        _id:
          type: string
          x-go-extra-tags:
            bun: 'id,pk'
        name:
          type: string
        units:
          type: array
          items:
            $ref: '#/components/schemas/Unit'
